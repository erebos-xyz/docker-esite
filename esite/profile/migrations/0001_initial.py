# Generated by Django 2.2.9 on 2020-01-16 18:08

import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import wagtail.core.blocks
import wagtail.core.fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('wagtailcore', '0041_group_collection_permissions_verbose_name_plural'),
    ]

    operations = [
        migrations.CreateModel(
            name='ProfilePage',
            fields=[
                ('page_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='wagtailcore.Page')),
                ('verified', models.BooleanField(blank=True, default=False)),
                ('available_for_hire', models.BooleanField(blank=True, default=False)),
                ('username', models.CharField(blank=True, error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 36 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=36, null=True, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=30, null=True)),
                ('last_name', models.CharField(blank=True, max_length=150, null=True)),
                ('telephone', models.CharField(blank=True, max_length=40, null=True)),
                ('address', models.CharField(blank=True, max_length=60, null=True)),
                ('postal_code', models.CharField(blank=True, max_length=12, null=True)),
                ('city', models.CharField(blank=True, max_length=60, null=True)),
                ('country', models.CharField(blank=True, max_length=2, null=True)),
                ('email', models.EmailField(blank=True, max_length=254, null=True)),
                ('website', models.URLField(blank=True, null=True)),
                ('company', models.CharField(blank=True, max_length=80, null=True)),
                ('platforms', wagtail.core.fields.StreamField([('platform', wagtail.core.blocks.StructBlock([('platformName', wagtail.core.blocks.CharBlock(blank=True, help_text='Bold header text', max_length=80, null=True)), ('platformUrl', wagtail.core.blocks.CharBlock(blank=True, help_text='Bold header text', max_length=2048, null=True)), ('avatarUrl', wagtail.core.blocks.CharBlock(blank=True, help_text='Bold header text', max_length=2048, null=True)), ('websiteUrl', wagtail.core.blocks.CharBlock(blank=True, help_text='Bold header text', max_length=2048, null=True)), ('company', wagtail.core.blocks.CharBlock(blank=True, help_text='Bold header text', max_length=80, null=True)), ('email', wagtail.core.blocks.CharBlock(blank=True, help_text='Bold header text', max_length=80, null=True)), ('username', wagtail.core.blocks.CharBlock(blank=True, help_text='Bold header text', max_length=80, null=True)), ('fullname', wagtail.core.blocks.CharBlock(blank=True, help_text='Bold header text', max_length=80, null=True)), ('createdAt', wagtail.core.blocks.CharBlock(blank=True, help_text='Bold header text', max_length=80, null=True)), ('location', wagtail.core.blocks.CharBlock(blank=True, help_text='Bold header text', max_length=80, null=True)), ('statusMessage', wagtail.core.blocks.CharBlock(blank=True, help_text='Bold header text', max_length=80, null=True)), ('statusEmojiHTML', wagtail.core.blocks.CharBlock(blank=True, help_text='Bold header text', max_length=80, null=True))], blank=True, icon='fa-instagram', null=True))], blank=True, null=True)),
                ('organizations', wagtail.core.fields.StreamField([('organization', wagtail.core.blocks.StructBlock([('avatarUrl', wagtail.core.blocks.CharBlock(blank=True, help_text='Bold header text', max_length=2048, null=True)), ('url', wagtail.core.blocks.CharBlock(blank=True, help_text='Bold header text', max_length=2048, null=True)), ('name', wagtail.core.blocks.CharBlock(blank=True, help_text='Bold header text', max_length=80, null=True)), ('members', wagtail.core.blocks.StreamBlock([('member', wagtail.core.blocks.StructBlock([('avatarUrl', wagtail.core.blocks.CharBlock(blank=True, help_text='Bold header text', max_length=2048, null=True)), ('url', wagtail.core.blocks.CharBlock(blank=True, help_text='Bold header text', max_length=2048, null=True)), ('fullname', wagtail.core.blocks.CharBlock(blank=True, help_text='Bold header text', max_length=80, null=True)), ('username', wagtail.core.blocks.CharBlock(blank=True, help_text='Bold header text', max_length=80, null=True))], blank=True, icon='cogs', null=True))], blank=True, max_num=8, null=True))], blank=True, icon='fa-instagram', null=True))], blank=True, null=True)),
                ('languages', wagtail.core.fields.StreamField([('languages', wagtail.core.blocks.StructBlock([('total', wagtail.core.blocks.IntegerBlock(blank=True, help_text='Bold header text', null=True)), ('slices', wagtail.core.blocks.StreamBlock([('Language', wagtail.core.blocks.StructBlock([('color', wagtail.core.blocks.CharBlock(blank=True, help_text='Bold header text', max_length=80, null=True)), ('name', wagtail.core.blocks.CharBlock(blank=True, help_text='Bold header text', max_length=80, null=True)), ('size', wagtail.core.blocks.IntegerBlock(blank=True, help_text='Bold header text', null=True)), ('share', wagtail.core.blocks.IntegerBlock(blank=True, help_text='Bold header text', null=True))], blank=True, icon='cogs', null=True))], blank=True, max_num=8, null=True))], blank=True, icon='fa-instagram', null=True))], blank=True, null=True)),
                ('main', wagtail.core.fields.StreamField([('top_language', wagtail.core.blocks.StructBlock([('slices', wagtail.core.blocks.StreamBlock([('Language', wagtail.core.blocks.StructBlock([('color', wagtail.core.blocks.CharBlock(blank=True, help_text='Bold header text', max_length=80, null=True)), ('name', wagtail.core.blocks.CharBlock(blank=True, help_text='Bold header text', max_length=80, null=True)), ('size', wagtail.core.blocks.IntegerBlock(blank=True, help_text='Bold header text', null=True)), ('share', wagtail.core.blocks.IntegerBlock(blank=True, help_text='Bold header text', null=True))], blank=True, icon='cogs', null=True))], blank=True, max_num=8, null=True))], blank=True, icon='fa-instagram', null=True)), ('contribution', wagtail.core.blocks.StructBlock([('datetime', wagtail.core.blocks.DateBlock(blank=True, null=True)), ('nameWithOwner', wagtail.core.blocks.CharBlock(blank=True, help_text='Bold header text', max_length=80, null=True)), ('repoUrl', wagtail.core.blocks.CharBlock(blank=True, help_text='Bold header text', max_length=2048, null=True)), ('type', wagtail.core.blocks.CharBlock(blank=True, help_text='Bold header text', max_length=80, null=True))], blank=True, icon='home', null=True)), ('code', wagtail.core.blocks.RawHTMLBlock(blank=True, icon='code', null=True)), ('calendar', wagtail.core.blocks.StructBlock([('total', wagtail.core.blocks.IntegerBlock(blank=True, help_text='Bold header text', null=True)), ('busiest_day', wagtail.core.blocks.StructBlock([('Date', wagtail.core.blocks.DateBlock(blank=True, null=True)), ('total', wagtail.core.blocks.IntegerBlock(blank=True, help_text='Bold header text', null=True))], blank=True, null=True)), ('longest_streak', wagtail.core.blocks.StructBlock([('startDate', wagtail.core.blocks.DateBlock(blank=True, null=True)), ('endDate', wagtail.core.blocks.DateBlock(blank=True, null=True)), ('total', wagtail.core.blocks.IntegerBlock(blank=True, help_text='Bold header text', null=True))], blank=True, null=True)), ('current_streak', wagtail.core.blocks.StructBlock([('startDate', wagtail.core.blocks.DateBlock(blank=True, null=True)), ('endDate', wagtail.core.blocks.DateBlock(blank=True, null=True)), ('total', wagtail.core.blocks.IntegerBlock(blank=True, help_text='Bold header text', null=True))], blank=True, null=True)), ('calendar', wagtail.core.blocks.TextBlock(blank=True, null=True))], blank=True, icon='home', null=True))], blank=True, null=True)),
            ],
            options={
                'abstract': False,
            },
            bases=('wagtailcore.page',),
        ),
    ]
